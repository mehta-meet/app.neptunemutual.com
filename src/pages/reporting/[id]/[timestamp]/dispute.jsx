import Head from "next/head";
import { useRouter } from "next/router";
import { useFetchReport } from "@/src/hooks/useFetchReport";
import { toBytes32 } from "@/src/helpers/cover";
import { NewDisputeReportForm } from "@/components/reporting/NewDisputeReportForm";
import { useCoverInfo } from "@/src/hooks/useCoverInfo";
import { ReportingHero } from "@/components/UI/organisms/reporting/new/ReportingHero";
import { Container } from "@/components/UI/atoms/container";
import { Alert } from "@/components/UI/atoms/alert";

export default function DisputeFormPage() {
  const router = useRouter();
  const { id: cover_id, timestamp } = router.query;

  const coverKey = toBytes32(cover_id);
  const { coverInfo } = useCoverInfo(coverKey);
  const { data, loading } = useFetchReport({
    coverKey: coverKey,
    incidentDate: timestamp,
  });

  return (
    <main>
      <Head>
        <title>Neptune Mutual</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      {/* hero */}
      <ReportingHero
        coverInfo={coverInfo}
        reportStatus={{
          resolved: data.incidentReport?.resolved,
          dispute: true,
        }}
      />

      {loading && <p className="text-center">Loading...</p>}

      {!data.incidentReport && <p className="text-center">No data found</p>}

      <Container className="py-16">
        {data.incidentReport &&
          data?.incidentReport?.totalRefutedCount !== "0" && (
            <Alert>Not applicable for disputing</Alert>
          )}

        {data.incidentReport &&
          data?.incidentReport?.totalRefutedCount === "0" && (
            <NewDisputeReportForm incidentReport={data.incidentReport} />
          )}
      </Container>
    </main>
  );
}
